{"version":3,"sources":["store.ts","utils/const.ts","utils/auth.ts","utils/request.ts","utils/user.ts","components/UserInfo.tsx","pages/Home.tsx","pages/Login.tsx","utils/subscription.ts","context/info.ts","components/SubStatus.tsx","components/Subscription.tsx","pages/SubManage.tsx","pages/SubCompare.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["key","a","localStorage","getItem","value","setItem","removeItem","apis","set","get","remove","host","Credential","username","password","valid","authHeaders","Object","create","this","undefined","axios","post","qs","stringify","validateStatus","status","result","data","String","split","map","line","reduce","obj","current","assign","Auth","checkCredential","c","validate","storeCredential","isChecked","isValid","store","JSON","getAuthHeaders","getUsername","headers","parse","request","endpoint","method","params","url","config","req","catch","error","response","console","log","message","UserInfo","useState","userInfo","setUserInfo","useEffect","getUserInfo","then","spinning","column","style","marginTop","Item","label","userId","userName","userEmail","userProfileId","Home","user","setUser","getAuthUser","type","layout","labelCol","span","wrapperCol","InputLayout","tailLayout","offset","Login","Form","useForm","form","history","useHistory","setSpinning","onSubmit","credential","notification","success","push","name","onFinish","rules","required","Password","htmlType","getNewestSubscriptionInfo","subscriptions","folders","noFolderSubscriptions","updateAt","Date","toISOString","version","subscriptionsR","forEach","sub","id","values","categories","length","foldersR","tags","filter","t","folder","paths","title","editSubscription","action","subscriptionId","newTitle","addToFolder","removeFromFolder","folderId","addSubscriptionToFolder","refreshAndGetSubscriptionInfo","setInfo","info","InfoContext","React","createContext","SubStatus","useContext","subInfo","setSubInfo","refreshUserSubscriptionInfo","align","dayjs","format","onClick","SubscriptionCard","modalVisible","setModalVisible","modelSpinning","setModelSpinning","selectedAddToFolderId","setSelectedAddToFolderId","handleOnClickDeleteFromFolder","deleteSubscriptionFromFolder","handleOnClickAddToFolder","extra","icon","EditOutlined","wordBreak","minHeight","target","rel","href","htmlUrl","visible","footer","onCancel","onConfirm","onChange","minWidth","Option","marginLeft","SubManage","selectedFolderID","setSelectedFolderID","Provider","treeData","concat","onSelect","selectedKey","margin","SubCompare","compareFolders","setCompareFolders","firstMore","secondMore","difference","setDifference","index","firstHas","Set","secondHas","has","b","bind","subId","pages","path","component","PageMenu","location","useLocation","mode","selectedKeys","pathname","page","to","App","exact","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8a3ae5.chunk.js","sourcesContent":["async function get(key: string): Promise<string | null> {\n    return localStorage.getItem(key);\n}\n\nasync function set(key: string, value: string) {\n    localStorage.setItem(key, value);\n}\n\nasync function remove(key: string) {\n    localStorage.removeItem(key);\n}\n\nconst apis = {set, get, remove};\n\nexport default apis;\n","// export const host = \"https://www.inoreader.com\";\nexport const host = \"https://inoapi.singee.me\";\n","import store from \"../store\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport {host} from \"./const\";\n\nexport class Credential {\n    private username: string;\n    private password: string;\n    private valid?: true | false;\n    private authHeaders = Object.create(null);\n\n    constructor(username: string, password: string) {\n        this.username = username;\n        this.password = password;\n    }\n\n    public isValid(): boolean { // 凭证有效\n        return !!this.valid;\n    }\n\n    public isChecked(): boolean { // 进行过合法性检测\n        return this.valid !== undefined;\n    }\n\n    public getUsername() {\n        return this.username;\n    }\n\n    public getAuthHeaders() {\n        return this.authHeaders;\n    }\n\n    async validate(): Promise<void> {\n        this.valid = false;\n        let result;\n\n        try {\n            result = await axios.post(host + \"/accounts/ClientLogin\", qs.stringify({\n                \"Email\": this.username,\n                \"Passwd\": this.password,\n            }), {\n                validateStatus: status => status === 200,\n            });\n        } catch (error) {\n            return;\n        }\n\n\n        const data = String(result.data).split(\"\\n\").map(line => {\n            const [key, value] = line.split(\"=\", 2);\n            return {[key]: value};\n        }).reduce((obj, current) => Object.assign(obj, current));\n\n        if (!data.Auth) return;\n\n        this.valid = true;\n        this.authHeaders[\"AppId\"] = \"999999457\";\n        this.authHeaders[\"AppKey\"] = \"nS4teGYXtOeBX5Hw509oZ098bZAF68jk\";\n        this.authHeaders[\"Authorization\"] = \"GoogleLogin auth=\" + data.Auth;\n\n        return;\n    }\n\n}\n\nexport async function checkCredential(username: string, password: string): Promise<Credential> {\n    const c = new Credential(username, password);\n    await c.validate();\n    return c;\n}\n\nexport async function storeCredential(c: Credential): Promise<boolean> {\n    if (!c.isChecked()) {\n        await c.validate();\n    }\n\n    if (c.isValid()) {\n        await store.set(\"auth-headers\", JSON.stringify(c.getAuthHeaders()));\n        await store.set(\"auth-user\", c.getUsername());\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport async function getAuthUser(): Promise<string | null> {\n    return await store.get(\"auth-user\");\n}\n\nexport async function getAuthHeaders() {\n    const headers = await store.get(\"auth-headers\");\n    if (!headers) return {};\n    return JSON.parse(headers);\n}\n","import {getAuthHeaders} from \"./auth\";\nimport axios, {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {message} from \"antd\";\nimport qs from \"qs\";\nimport {host} from \"./const\";\n\nexport async function request(endpoint: string, method: \"GET\" | \"POST\", params: object): Promise<AxiosResponse | null> {\n    const authHeaders = await getAuthHeaders();\n    const url = host + \"/reader/api/0\" + endpoint;\n\n    const config: AxiosRequestConfig = {\n        headers: Object.assign({\n            \"content-type\": \"application/x-www-form-urlencoded\",\n        }, authHeaders),\n    };\n\n    let req;\n\n    if (method === \"GET\") {\n        req = axios.get(url, Object.assign({params}, config));\n    } else {\n        req = axios.post(url, qs.stringify(params), config);\n    }\n\n    req.catch(error => {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n\n            message.error(\"HTTP \" + error.response.status);\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n            console.log(error);\n\n            message.error(\"No Response (maybe timeout)\");\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n            console.log(error);\n            message.error(\"Request Error: \" + error.message);\n        }\n\n        console.log(error.config);\n        return null;\n    });\n\n    return await req;\n}\n\nexport async function get(endpoint: string, params: object) {\n    return request(endpoint, \"GET\", params);\n}\n\nexport async function post(endpoint: string, data: object) {\n    return request(endpoint, \"POST\", data);\n}\n","import {get} from \"./request\";\n\nexport async function getUserInfo() {\n    const response = await get(\"/user-info\", {});\n    if (!response) return null;\n\n    return response.data as {\n        userId: string,\n        userName: string,\n        userProfileId: string,\n        userEmail: string,\n    };\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Descriptions, Spin} from \"antd\";\nimport {getUserInfo} from \"../utils/user\";\nimport {Await} from \"../utils/typing\";\n\n\nexport function UserInfo() {\n    const [userInfo, setUserInfo] = useState<Await<ReturnType<typeof getUserInfo>>>(null);\n\n    useEffect(() => {\n        getUserInfo().then(setUserInfo);\n    }, []);\n\n    return (\n        <Spin spinning={!userInfo}>\n            <Descriptions column={1} style={{marginTop: \"3rem\"}}>\n                <Descriptions.Item label=\"UserID\">{userInfo?.userId}</Descriptions.Item>\n                <Descriptions.Item label=\"UserName\">{userInfo?.userName}</Descriptions.Item>\n                <Descriptions.Item label=\"UserEmail\">{userInfo?.userEmail}</Descriptions.Item>\n                <Descriptions.Item label=\"UserProfile\">{userInfo?.userProfileId}</Descriptions.Item>\n            </Descriptions>\n        </Spin>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Alert} from \"antd\";\nimport {getAuthUser} from \"../utils/auth\";\nimport {UserInfo} from \"../components/UserInfo\";\n\nexport function Home() {\n    const [user, setUser] = useState<string | null>(null);\n\n    useEffect(() => {\n        getAuthUser().then(setUser);\n    }, []);\n\n\n    return (<>\n        {\n            user ?\n                <Alert message={\"当前登录用户：\" + user} type=\"info\"/> :\n                <Alert message=\"尚未登录 Inoreader 账号，请点击上方菜单按钮登录\" type=\"warning\"/>\n        }\n\n        {\n            user && <UserInfo/>\n        }\n    </>);\n}\n","import React, {useState} from \"react\";\nimport {Form, Input, Button, Spin} from \"antd\";\nimport {checkCredential, storeCredential} from \"../utils/auth\";\nimport {useHistory} from \"react-router-dom\";\nimport {notification} from \"antd\";\n\nconst layout = {\n    labelCol: {span: 8},\n    wrapperCol: {span: 16},\n};\nconst InputLayout = {\n    wrapperCol: {span: 8},\n};\nconst tailLayout = {\n    wrapperCol: {offset: 8, span: 16},\n};\n\n\nexport function Login() {\n    const [form] = Form.useForm();\n    const history = useHistory();\n    const [spinning, setSpinning] = useState(false);\n\n    const onSubmit = async function ({username, password}: { username: string, password: string }) {\n        setSpinning(true);\n        const credential = await checkCredential(username, password);\n\n        if (credential.isValid()) { // 登录成功\n            notification.success({message: \"登录成功\"});\n            await storeCredential(credential);\n\n            setSpinning(false);\n            history.push(\"/\");\n        } else {\n            notification.error({message: \"登录失败，请重试\"});\n            setSpinning(false);\n        }\n    };\n\n    return (\n        <Spin spinning={spinning}>\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onSubmit}\n                // onFinish={onFinish}\n                // onFinishFailed={onFinishFailed}\n                form={form}\n            >\n                <Form.Item {...InputLayout}\n                           label=\"邮箱\"\n                           name=\"username\"\n                           rules={[{required: true, message: \"请输入 Inoreader 的登录邮箱\"}]}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item {...InputLayout}\n                           label=\"密码\"\n                           name=\"password\"\n                           rules={[{required: true, message: \"请输入 Inoreader 的密码\"}]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Spin>\n    );\n}\n","import {get, post} from \"./request\";\n\nexport interface Subscription {\n    id: string,\n    title: string,\n    categories: {\n        id: string,\n        label: string,\n    }[],\n    url: string,\n    htmlUrl: string\n}\n\nexport interface Folder {\n    id: string,\n    title: string,\n    type: \"folder\",\n    subscriptions: Subscription[],\n}\n\nexport interface UserSubscriptionInfo {\n    subscriptions: { [id: string]: Subscription }\n    folders: { [id: string]: Folder }\n    noFolderSubscriptions: { [id: string]: Subscription }\n    updateAt: string,\n    version: 1\n}\n\n// export async function getUserSubscriptionInfo(): Promise<UserSubscriptionInfo | null> {\n//     const info = await store.get(\"subscription-info\");\n//     if (!info) return null;\n//     return JSON.parse(info);\n// }\n//\n// export async function storeUserSubscriptionInfo(info: UserSubscriptionInfo) {\n//     await store.set(\"subscription-info\", JSON.stringify(info));\n// }\n\nasync function getNewestSubscriptionInfo(): Promise<UserSubscriptionInfo> {\n    const result: UserSubscriptionInfo = {\n        subscriptions: {},\n        folders: {},\n        noFolderSubscriptions: {},\n        updateAt: (new Date()).toISOString(),\n        version: 1,\n    };\n\n    const subscriptionsR = await get(\"/subscription/list\", {});\n\n    subscriptionsR?.data.subscriptions.forEach((sub: any) => {\n        result.subscriptions[sub.id] = sub;\n    });\n\n    Object.values(result.subscriptions).forEach(sub => {\n        if (!sub.categories || sub.categories.length === 0) {\n            result.noFolderSubscriptions[sub.id] = sub;\n        }\n    });\n\n    const foldersR = await get(\"/tag/list\", {\"types\": 1});\n\n    foldersR?.data?.tags.filter((t: any) => t.type === \"folder\").forEach((folder: { id: string, type: \"folder\" }) => {\n        const paths = folder.id.split(\"/\");\n\n        const title = paths[paths.length - 1];\n\n        const subscriptions = Object.values(result.subscriptions).filter(sub => {\n            for (const c of sub.categories) {\n                if (c.id === folder.id) return true;\n            }\n            return false;\n        });\n\n        result.folders[folder.id] = Object.assign(folder, {\n            title,\n            paths,\n            subscriptions,\n        });\n    });\n\n    return result;\n}\n\nasync function editSubscription(action: \"edit\" | \"subscribe\" | \"unsubscribe\", subscriptionId: string,\n                                {newTitle, addToFolder, removeFromFolder}: {\n                                    newTitle?: string,\n                                    addToFolder?: string,\n                                    removeFromFolder?: string\n                                }) {\n    const response = await post(\"/subscription/edit\", {\n        \"ac\": action,\n        \"s\": subscriptionId,\n        \"t\": newTitle,\n        \"a\": addToFolder,\n        \"r\": removeFromFolder,\n    });\n\n    return !!response;\n}\n\nexport async function deleteSubscriptionFromFolder(subscriptionId: string, folderId: string) {\n    return await editSubscription(\"edit\", subscriptionId, {removeFromFolder: folderId});\n}\n\nexport async function addSubscriptionToFolder(subscriptionId: string, folderId: string) {\n    return await editSubscription(\"edit\", subscriptionId, {addToFolder: folderId});\n}\n\nexport async function refreshAndGetSubscriptionInfo(setInfo: (newInfo: UserSubscriptionInfo) => void) {\n    const info = await getNewestSubscriptionInfo();\n\n    setInfo(info);\n}\n","import React from \"react\";\nimport {UserSubscriptionInfo} from \"../utils/subscription\";\n\nexport const InfoContext = React.createContext<{ info: UserSubscriptionInfo | null, setInfo: (newInfo: UserSubscriptionInfo | null) => void }>({\n    info: null, setInfo: () => {\n    },\n});\n","import React, {useContext} from \"react\";\nimport {Alert, Button, Descriptions, Col, Row, Spin} from \"antd\";\nimport dayjs from \"dayjs\";\nimport {refreshAndGetSubscriptionInfo} from \"../utils/subscription\";\nimport {InfoContext} from \"../context/info\";\n\nexport function SubStatus({spinning, setSpinning}: {\n    spinning: boolean,\n    setSpinning: (newSpinning: boolean) => void,\n}) {\n\n    const {info: subInfo, setInfo: setSubInfo} = useContext(InfoContext);\n\n\n    const refreshUserSubscriptionInfo = async () => {\n        setSpinning(true);\n\n        await refreshAndGetSubscriptionInfo(setSubInfo);\n\n        setSpinning(false);\n    };\n\n    if (subInfo) {\n        return (\n            <Spin spinning={spinning}>\n                <Alert message={\n                    <>\n                        <Row align=\"middle\">\n                            <Col span={18}>\n                                <Descriptions column={1}>\n                                    <Descriptions.Item\n                                        label=\"最后更新时间\">{dayjs(subInfo.updateAt).format(\"YYYY-MM-DD HH:mm:ss\")}</Descriptions.Item>\n                                    <Descriptions.Item\n                                        label=\"订阅数量\">{Object.values(subInfo.subscriptions).length}</Descriptions.Item>\n                                    <Descriptions.Item\n                                        label=\"文件夹数量\">{Object.values(subInfo.folders).length}</Descriptions.Item>\n                                </Descriptions>\n                            </Col>\n                            <Col span={6}><Button onClick={refreshUserSubscriptionInfo}>刷新</Button></Col>\n                        </Row>\n                    </>\n                }/>\n            </Spin>\n\n        );\n    } else {\n        return (\n            <Spin spinning={spinning}>\n                <Alert message={\n                    <>\n                        还没有加载过订阅数据 <Button onClick={refreshUserSubscriptionInfo}>加载</Button>\n                    </>\n                }/>\n            </Spin>\n        );\n    }\n\n\n}\n","import {Button, Card, message, Modal, Popconfirm, Select, Spin} from \"antd\";\nimport React, {useContext, useState} from \"react\";\nimport {\n    addSubscriptionToFolder,\n    deleteSubscriptionFromFolder,\n    refreshAndGetSubscriptionInfo,\n    Subscription,\n} from \"../utils/subscription\";\nimport {EditOutlined} from \"@ant-design/icons\";\nimport {InfoContext} from \"../context/info\";\n\nexport function SubscriptionCard({sub}: { sub: Subscription }) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modelSpinning, setModelSpinning] = useState(false);\n    const [selectedAddToFolderId, setSelectedAddToFolderId] = useState(\"\");\n    const {info, setInfo} = useContext(InfoContext);\n\n    const handleOnClickDeleteFromFolder = (folderId: string) => {\n        setModelSpinning(true);\n        // 调用 API 删除\n        deleteSubscriptionFromFolder(sub.id, folderId)\n            // 刷新最新状态\n            .then(() => refreshAndGetSubscriptionInfo(setInfo))\n            .then(() => {\n                setModelSpinning(false);\n                message.success(\"删除成功\");\n            });\n    };\n\n    const handleChangeAddFolder = (value: string) => {\n        setSelectedAddToFolderId(value);\n    };\n\n    const handleOnClickAddToFolder = async () => {\n        if (!selectedAddToFolderId) {\n            message.error(\"请选择要添加到的文件夹\");\n        } else {\n            setModelSpinning(true);\n            addSubscriptionToFolder(sub.id, selectedAddToFolderId)\n                .then(() => refreshAndGetSubscriptionInfo(setInfo))\n                .then(() => {\n                    setModelSpinning(false);\n                    message.success(\"添加成功\");\n                });\n        }\n    };\n\n    return (<>\n        <Card title={sub.title} extra={<Button type=\"link\" icon={<EditOutlined/>} onClick={() => {\n            setModalVisible(true);\n        }}/>}>\n            <div style={{wordBreak: \"break-all\", minHeight: \"6rem\"}}>\n                <div>主页：<a target=\"_blank\" rel=\"noreferrer\" href={sub.htmlUrl}>{sub.htmlUrl}</a></div>\n                <div>RSS：<a target=\"_blank\" rel=\"noreferrer\" href={sub.url}>{sub.url}</a></div>\n            </div>\n        </Card>\n\n        <Modal visible={modalVisible} title={`编辑 (${sub.title})`} footer={null} onCancel={() => {\n            setModalVisible(false);\n        }}>\n            <Spin spinning={modelSpinning}>\n                <div>该订阅属于</div>\n                <ul>\n                    {\n                        sub.categories.map(c => (\n                            <li key={c.id}>{info!.folders[c.id].title}\n                                <Popconfirm title=\"是否确认从文件夹中删除该订阅？\" onConfirm={() => {\n                                    handleOnClickDeleteFromFolder(c.id);\n                                }}>\n                                    <Button type=\"link\">移除</Button>\n                                </Popconfirm>\n                            </li>\n                        ))\n                    }\n                </ul>\n                <div>想添加进其他文件夹？</div>\n                <Select onChange={handleChangeAddFolder} style={{minWidth: \"10rem\"}}>\n                    {\n                        Object.values(info!.folders).map(folder => <Select.Option key={folder.id}\n                                                                                  value={folder.id}>{folder.title}</Select.Option>)\n                    }\n                </Select>\n                <Button onClick={handleOnClickAddToFolder} style={{marginLeft: \"1rem\"}}>添加</Button>\n            </Spin>\n\n\n        </Modal>\n    </>);\n\n\n}\n","import React, {useEffect, useState} from \"react\";\nimport {SubStatus} from \"../components/SubStatus\";\nimport {refreshAndGetSubscriptionInfo, UserSubscriptionInfo} from \"../utils/subscription\";\nimport {Col, Row, Spin, Tree} from \"antd\";\nimport {SubscriptionCard} from \"../components/Subscription\";\nimport {InfoContext} from \"../context/info\";\n\nexport function SubManage() {\n    const [spinning, setSpinning] = useState(true);\n    const [subInfo, setSubInfo] = useState<UserSubscriptionInfo | null>(null);\n    const [selectedFolderID, setSelectedFolderID] = useState<string | null>(null);\n\n    useEffect(() => {\n        refreshAndGetSubscriptionInfo(setSubInfo).then(() => {\n            setSpinning(false);\n        });\n    }, []);\n\n    const onSelect = ([selectedKey]: React.Key[]) => {\n        setSelectedFolderID(selectedKey as string || null);\n    };\n\n    return (\n        <InfoContext.Provider value={{info: subInfo, setInfo: setSubInfo}}>\n            <SubStatus spinning={spinning} setSpinning={setSpinning}/>\n\n            {subInfo && <Spin spinning={spinning}>\n                <Row style={{marginTop: \"3rem\"}}>\n                    <Col span={4}>\n                        <Tree treeData={\n                            [{\n                                title: `ROOT ${Object.values(subInfo.noFolderSubscriptions).length}`, key: \"/\",\n                            }].concat(Object.values(subInfo.folders).map(folder => ({\n                                title: `${folder.title} (${folder.subscriptions.length})`,\n                                key: folder.id,\n                            })))}\n                              onSelect={onSelect}>\n                        </Tree>\n                    </Col>\n                    <Col span={20}>\n                        <Row>\n                            {\n                                (selectedFolderID ? selectedFolderID === \"/\" ? Object.values(subInfo.noFolderSubscriptions) :\n                                    subInfo.folders[selectedFolderID].subscriptions : Object.values(subInfo.subscriptions)).map(sub =>\n                                    <Col span={8} key={sub.id}>\n                                        <div style={{margin: \"0.3rem\"}}><SubscriptionCard key={sub.id} sub={sub}/></div>\n                                    </Col>)\n                            }\n                        </Row>\n                    </Col>\n                </Row>\n\n            </Spin>}\n        </InfoContext.Provider>\n\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {refreshAndGetSubscriptionInfo, UserSubscriptionInfo} from \"../utils/subscription\";\nimport {Col, Row, Select, Spin} from \"antd\";\nimport {SubscriptionCard} from \"../components/Subscription\";\nimport {InfoContext} from \"../context/info\";\n\nexport function SubCompare() {\n    const [spinning, setSpinning] = useState(true);\n    const [subInfo, setSubInfo] = useState<UserSubscriptionInfo | null>(null);\n    const [compareFolders, setCompareFolders] = useState<[string, string]>([\"\", \"\"]);\n    const [difference, setDifference] = useState<{ firstMore: string[], secondMore: string[] }>({\n        firstMore: [],\n        secondMore: [],\n    });\n\n    useEffect(() => {\n        refreshAndGetSubscriptionInfo(setSubInfo).then(() => {\n            setSpinning(false);\n        });\n    }, []);\n\n    const onSelect = (index: 0 | 1, selectedKey: string) => {\n        if (index === 0) {\n            setCompareFolders([selectedKey, compareFolders[1]]);\n        } else {\n            setCompareFolders([compareFolders[0], selectedKey]);\n        }\n    };\n\n\n    useEffect(() => {\n        const firstMore: string[] = [];\n        const secondMore: string[] = [];\n        const result = {firstMore, secondMore};\n\n        if (!subInfo || !compareFolders[0] || !compareFolders[1] || compareFolders[0] === compareFolders[1]) {\n            setDifference(result);\n            return;\n        }\n\n        const firstHas = new Set(subInfo.folders[compareFolders[0]].subscriptions.map(sub => sub.id));\n        const secondHas = new Set(subInfo.folders[compareFolders[1]].subscriptions.map(sub => sub.id));\n\n        firstHas.forEach(a => {\n            if (!secondHas.has(a)) firstMore.push(a);\n        });\n\n        secondHas.forEach(b => {\n            if (!firstHas.has(b)) secondMore.push(b);\n        });\n\n\n        setDifference(result);\n    }, [compareFolders, subInfo]);\n\n    return (\n        <InfoContext.Provider value={{info: subInfo, setInfo: setSubInfo}}>\n            <Spin spinning={spinning}>\n                <div>\n                    <Select style={{minWidth: \"6rem\"}} onChange={onSelect.bind(null, 0)}>\n                        {\n                            subInfo && Object.values(subInfo.folders).map(folder => <Select.Option\n                                key={folder.id} value={folder.id}>{folder.title}</Select.Option>)\n                        }\n                    </Select>\n                    <span style={{margin: \"auto 1rem\"}}>与</span>\n                    <Select style={{minWidth: \"6rem\"}} onChange={onSelect.bind(null, 1)}>\n                        {\n                            subInfo && Object.values(subInfo.folders).map(folder => <Select.Option\n                                key={folder.id} value={folder.id}>{folder.title}</Select.Option>)\n                        }\n                    </Select>\n                    <span style={{margin: \"auto 1rem\"}}>比较</span>\n                </div>\n                {\n                    !(!subInfo || !compareFolders[0] || !compareFolders[1] || compareFolders[0] === compareFolders[1]) && (<>\n                        <h1 style={{marginTop: \"3rem\"}}>{subInfo.folders[compareFolders[0]].title} 比 {subInfo.folders[compareFolders[1]].title} 多了</h1>\n                        <Row>\n\n                            {\n                                difference.firstMore.map(subId =>\n                                    <Col span={8} key={subId}>\n                                        <div style={{margin: \"0.3rem\"}}>\n                                            <SubscriptionCard key={subId} sub={subInfo.subscriptions[subId]}/>\n                                        </div>\n                                    </Col>)\n                            }\n                        </Row>\n\n                        <h1 style={{marginTop: \"3rem\"}}>{subInfo.folders[compareFolders[0]].title} 比 {subInfo.folders[compareFolders[1]].title} 少了</h1>\n                        <Row>\n\n                            {\n                                difference.secondMore.map(subId =>\n                                    <Col span={8} key={subId}>\n                                        <div style={{margin: \"0.3rem\"}}>\n                                            <SubscriptionCard key={subId} sub={subInfo.subscriptions[subId]}/>\n                                        </div>\n                                    </Col>)\n                            }\n                        </Row>\n                    </>)\n                }\n\n\n            </Spin>\n        </InfoContext.Provider>\n\n    );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport {Menu} from \"antd\";\nimport {Home} from \"./pages/Home\";\nimport {Login} from \"./pages/Login\";\nimport {SubManage} from \"./pages/SubManage\";\nimport {SubCompare} from \"./pages/SubCompare\";\n\nconst pages = [\n    {\n        path: \"/\",\n        name: \"首页\",\n        component: <Home/>,\n    },\n    {\n        path: \"/login\",\n        name: \"登录\",\n        component: <Login/>,\n    },\n    {\n        path: \"/subscribe/manage\",\n        name: \"管理订阅\",\n        component: <SubManage/>,\n    },\n    {\n        path: \"/subscribe/compare\",\n        name: \"比较订阅\",\n        component: <SubCompare/>,\n    },\n    {\n        path: \"/subscribe/add\",\n        name: \"添加订阅\",\n        component: <div>add subscribe</div>,\n    },\n];\n\nfunction PageMenu() {\n    const location = useLocation();\n\n    return (\n        <Menu mode=\"horizontal\" selectedKeys={[location.pathname]}>\n            {\n                pages.map(page => <Menu.Item key={page.path}><Link to={page.path}>{page.name}</Link></Menu.Item>)\n            }\n        </Menu>\n    );\n}\n\nfunction App() {\n    return (\n        <Router>\n            <PageMenu/>\n            <Switch>\n                {\n                    pages.map(page => (\n                        <Route exact path={page.path} key={page.path}>\n                            <div className=\"Container\">{page.component}</div>\n                        </Route>\n                    ))\n                }\n\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}